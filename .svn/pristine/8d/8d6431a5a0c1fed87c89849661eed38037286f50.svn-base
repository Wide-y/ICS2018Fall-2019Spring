# calculate the sum of list
# author: zhaoshenglong
# id:     515030910241

# start of program
# execution begins at address 0
	.pos 0
	irmovq stack, %rsp
	call main				# execute main program
	halt

# struct linked list
	.align 8
ele1: 
	.quad 0x00a
	.quad ele2
ele2:
	.quad 0x0b0
	.quad ele3
ele3:
	.quad 0xc00
	.quad 0

main:
	irmovq ele1, %rdi
	call sum
	ret

# sum(list *list_ptr)
# list_ptr in %rdi
sum:
	pushq %rbx
	irmovq $0, %rax
	jmp test
loop:
	mrmovq (%rdi), %rbx
	addq %rbx, %rax
	mrmovq 0x8(%rdi), %rdi
test:
	andq %rdi, %rdi
	jne loop
	popq %rbx
	ret

# stack starts here, and frows to lower addresser
	.pos 0x200
stack:
