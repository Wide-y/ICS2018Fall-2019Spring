                            | # recursively calculate the sum of list
                            | # author: zhaoshenglong
                            | # id:     515030910241
                            | 
                            | # start of program
                            | # execution begins at address 0
0x000:                      | 	.pos 0
0x000: 30f40002000000000000 | 	irmovq stack, %rsp
0x00a: 804800000000000000   | 	call main
0x013: 00                   | 	halt
                            | 
                            | # struct of linked list
0x018:                      | 	.align 8
0x018:                      | ele1:
0x018: 0a00000000000000     | 	.quad 0x00a
0x020: 2800000000000000     | 	.quad ele2
0x028:                      | ele2:
0x028: b000000000000000     | 	.quad 0x0b0
0x030: 3800000000000000     | 	.quad ele3
0x038:                      | ele3:
0x038: 000c000000000000     | 	.quad 0xc00
0x040: 0000000000000000     | 	.quad 0
                            | 
                            | # Api of main function
0x048:                      | main:
0x048: 30f71800000000000000 | 	irmovq ele1, %rdi
0x052: 805c00000000000000   | 	call rsum
0x05b: 90                   | 	ret
                            | 
                            | # rsum(list *list_ptr)
                            | # list_ptr in %rdi
0x05c:                      | rsum:
0x05c: a03f                 | 	pushq %rbx
0x05e: 6277                 | 	andq %rdi, %rdi
0x060: 738800000000000000   | 	je done
0x069: 50370000000000000000 | 	mrmovq (%rdi), %rbx
0x073: 50770800000000000000 | 	mrmovq 0x8(%rdi), %rdi
0x07d: 805c00000000000000   | 	call rsum
0x086: 6030                 | 	addq %rbx, %rax
0x088:                      | done:
0x088: b03f                 | 	popq %rbx
0x08a: 90                   | 	ret
                            | 
                            | # stack starts here and grows to lower address
0x200:                      | 	.pos 0x200
0x200:                      | stack:
